{
  "openapi": "3.0.3",
  "info": {
    "title": "Election",
    "description": "Election",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https"
    }
  ],
  "paths": {
    "/api/users": {
      "post": {
        "tags": [
          "User API"
        ],
        "description": "Register new user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "required": true
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "required": true
                  },
                  "full_name": {
                    "type": "string",
                    "required": true
                  },
                  "password": {
                    "type": "string",
                    "required": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success create a new user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "username": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string",
                      "format": "email"
                    },
                    "full_name": {
                      "type": "string"
                    },
                    "password": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User API"
        ],
        "description": "Logout user",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success logout",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/login": {
      "post": {
        "tags": [
          "User API"
        ],
        "description": "Login User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "required": true
                  },
                  "password": {
                    "type": "string",
                    "required": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success login",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts": {
      "post": {
        "tags": [
          "Account API"
        ],
        "description": "Create a new account for user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "required": true
                  },
                  "avatar": {
                    "type": "string",
                    "required": false
                  },
                  "birth_date": {
                    "type": "string",
                    "format": "date"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success create account",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ID": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    },
                    "avatar": {
                      "type": "string"
                    },
                    "birth_date": {
                      "type": "string",
                      "format": "date"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts/{account_id}": {
      "get": {
        "tags": [
          "Account API"
        ],
        "description": "Get current account",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success get current account",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ID": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    },
                    "avatar": {
                      "type": "string"
                    },
                    "birth_date": {
                      "type": "string",
                      "format": "date"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Account API"
        ],
        "description": "Update account",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string"
                  }

                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success update account",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ID": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    },
                    "avatar": {
                      "type": "string"
                    },
                    "birth_date": {
                      "type": "string",
                      "format": "date"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/candidates/{candidate_id}/posts/{post_id}": {
      "get": {
        "tags": [
          "Account API"
        ],
        "description": "View the candidate`s post",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "candidate_id",
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "post_id",
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success view candidate`s post",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "post_id": {
                      "type": "integer"
                    },
                    "candidate_id": {
                      "type": "integer"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/candidates/{candidate_id}/posts/{post_id}/comments": {
      "post": {
        "tags": [
          "Account API"
        ],
        "description": "Comment to candidate`s post",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "candidate_id",
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "post_id",
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "example": "coblos 04"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success create comment",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "account_id": {
                      "type": "integer"
                    },
                    "candidate_id": {
                      "type": "integer"
                    },
                    "post_id": {
                      "type": "integer"
                    },
                    "comment": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/candidates/{candidate_id}": {
      "get": {
        "tags": [
          "Accounts API"
        ],
        "description": "View information about candidates",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "candidate_id",
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success get candidates information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ID": {
                      "type": "integer"
                    },
                    "election_number": {
                      "type": "integer"
                    },
                    "account_id": {
                      "type": "integer"
                    },
                    "vision": {
                      "type": "string"
                    },
                    "mission": {
                      "type": "string"
                    },
                    "achievement": {
                      "type": "string"
                    },
                    "experiences": {
                      "type": "string"
                    },
                    "leader_id": {
                      "type": "integer"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts/vote": {
      "patch": {
        "tags": [
          "Account API"
        ],
        "description": "votes for candidates during the specified election period",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "candidate_id": {
                    "type": "integer",
                    "example": "4"
                  },
                  "is_voted": {
                    "type": "boolean",
                    "description": "true indicates that he has already voted and will not do so again",
                    "example": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success vote a candidate",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Vote successfully"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/": {

    }
  }
}

